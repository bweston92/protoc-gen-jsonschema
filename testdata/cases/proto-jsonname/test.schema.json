{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$ref": "#/$defs/.tests.Values",
  "$defs": {
    ".tests.Enum": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "ONE",
        "TWO",
        "THREE"
      ]
    },
    ".tests.Values": {
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "string_value"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "string_value"
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "oneOf": [
            {
              "required": [
                "int32_value"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "int32_value"
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "oneOf": [
            {
              "required": [
                "int64_value"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "int64_value"
                    ]
                  }
                ]
              }
            }
          ]
        }
      ],
      "properties": {
        "string_value": {
          "$ref": "#/$defs/.tests.Values.string_value"
        },
        "int32_value": {
          "$ref": "#/$defs/.tests.Values.int32_value"
        },
        "int64_value": {
          "$ref": "#/$defs/.tests.Values.int64_value"
        },
        "nested_value": {
          "$ref": "#/$defs/.tests.Values.nested_value"
        },
        "enum_value": {
          "$ref": "#/$defs/.tests.Values.enum_value"
        }
      },
      "type": "object",
      "required": [
        "nested_value",
        "enum_value"
      ]
    },
    ".tests.Values.string_value": {
      "type": "string"
    },
    ".tests.Values.int32_value": {
      "type": "integer"
    },
    ".tests.Values.int64_value": {
      "type": "integer"
    },
    ".tests.Values.nested_value": {
      "$ref": "#/$defs/.tests.Nested"
    },
    ".tests.Values.enum_value": {
      "$ref": "#/$defs/.tests.Enum"
    },
    ".tests.Nested": {
      "properties": {
        "value": {
          "$ref": "#/$defs/.tests.Nested.value"
        }
      },
      "type": "object",
      "required": [
        "value"
      ]
    },
    ".tests.Nested.value": {
      "type": "string"
    }
  },
  "type": "object"
}