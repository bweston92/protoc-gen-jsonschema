$defs:
  .tests.MyEnum:
    enum:
    - FOO
    - BAR
    - BAZ
    type: string
  .tests.MyMessage:
    properties:
      val1:
        $ref: '#/$defs/.tests.MyMessage.val1'
      val2:
        $ref: '#/$defs/.tests.MyMessage.val2'
    required:
    - val1
    - val2
    type: object
  .tests.MyMessage.val1:
    items:
      type: string
    type: array
  .tests.MyMessage.val2:
    items:
      type: integer
    type: array
  .tests.Values:
    properties:
      enum:
        $ref: '#/$defs/.tests.Values.enum'
      message:
        $ref: '#/$defs/.tests.Values.message'
      optioned1:
        $ref: '#/$defs/.tests.Values.optioned1'
      optioned2:
        $ref: '#/$defs/.tests.Values.optioned2'
      optioned3:
        $ref: '#/$defs/.tests.Values.optioned3'
      val1:
        $ref: '#/$defs/.tests.Values.val1'
      val2:
        oneOf:
        - type: "null"
        - $ref: '#/$defs/.tests.Values.val2'
    required:
    - val1
    - val2
    - optioned1
    - optioned2
    - optioned3
    - message
    - enum
    type: object
  .tests.Values.enum:
    items:
      $ref: '#/$defs/.tests.MyEnum'
    type: array
  .tests.Values.message:
    items:
      $ref: '#/$defs/.tests.MyMessage'
    type: array
  .tests.Values.optioned1:
    items:
      type: number
    maxItems: 3
    minItems: 1
    type: array
  .tests.Values.optioned2:
    items:
      type: number
    maxItems: 3
    minItems: 1
    type: array
    uniqueItems: true
  .tests.Values.optioned3:
    items:
      type: number
    maxItems: 3
    minItems: 1
    type: array
    uniqueItems: false
  .tests.Values.val1:
    items:
      type: string
    type: array
  .tests.Values.val2:
    description: My Description
    items:
      description: My Description
      title: My Title
      type: integer
    title: My Title
    type: array
$ref: '#/$defs/.tests.Values'
$schema: https://json-schema.org/draft/2020-12/schema
type: object
