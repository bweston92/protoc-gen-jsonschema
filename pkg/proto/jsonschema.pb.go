// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: jsonschema.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EnumOptions_MappingType int32

const (
	EnumOptions_MapToString EnumOptions_MappingType = 0
	EnumOptions_MapToNumber EnumOptions_MappingType = 1
	EnumOptions_MapToCustom EnumOptions_MappingType = 2
)

// Enum value maps for EnumOptions_MappingType.
var (
	EnumOptions_MappingType_name = map[int32]string{
		0: "MapToString",
		1: "MapToNumber",
		2: "MapToCustom",
	}
	EnumOptions_MappingType_value = map[string]int32{
		"MapToString": 0,
		"MapToNumber": 1,
		"MapToCustom": 2,
	}
)

func (x EnumOptions_MappingType) Enum() *EnumOptions_MappingType {
	p := new(EnumOptions_MappingType)
	*p = x
	return p
}

func (x EnumOptions_MappingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnumOptions_MappingType) Descriptor() protoreflect.EnumDescriptor {
	return file_jsonschema_proto_enumTypes[0].Descriptor()
}

func (EnumOptions_MappingType) Type() protoreflect.EnumType {
	return &file_jsonschema_proto_enumTypes[0]
}

func (x EnumOptions_MappingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnumOptions_MappingType.Descriptor instead.
func (EnumOptions_MappingType) EnumDescriptor() ([]byte, []int) {
	return file_jsonschema_proto_rawDescGZIP(), []int{8, 0}
}

// Not extendable, just define structure
// Plugin wide options
type PluginOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//*
	//WIP: visibility_level is used to determine which message should be generated.
	//Currently not work.
	VisibilityLevel uint32 `protobuf:"varint,1,opt,name=visibility_level,json=visibilityLevel,proto3" json:"visibility_level,omitempty"`
	//*
	//entrypoint_message is used which message should be entrypoint object of schema.
	//default: null or empty
	//example:
	//- --jsonschema_opt=entrypoint_message=MyMessage
	EntrypointMessage string `protobuf:"bytes,2,opt,name=entrypoint_message,json=entrypointMessage,proto3" json:"entrypoint_message,omitempty"`
	//*
	//output_file_suffix is used to determine output file name suffix.
	//Values should end with '.json' or '.yaml' or '.yml'.
	//default: .schema.json
	//example:
	//- --jsonschema_opt=output_file_suffix=.schema.json
	//- --jsonschema_opt=output_file_suffix=.schema.yaml
	OutputFileSuffix string `protobuf:"bytes,3,opt,name=output_file_suffix,json=outputFileSuffix,proto3" json:"output_file_suffix,omitempty"`
	//*
	//pretty_json_output is used to determine output json should be pretty printed.
	//This option is only used when output_file_suffix is '.json'.
	//default: true
	//example:
	//- --jsonschema_opt=pretty_json_output=true
	//- --jsonschema_opt=pretty_json_output=false
	PrettyJsonOutput bool `protobuf:"varint,4,opt,name=pretty_json_output,json=prettyJsonOutput,proto3" json:"pretty_json_output,omitempty"`
}

func (x *PluginOptions) Reset() {
	*x = PluginOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonschema_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginOptions) ProtoMessage() {}

func (x *PluginOptions) ProtoReflect() protoreflect.Message {
	mi := &file_jsonschema_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginOptions.ProtoReflect.Descriptor instead.
func (*PluginOptions) Descriptor() ([]byte, []int) {
	return file_jsonschema_proto_rawDescGZIP(), []int{0}
}

func (x *PluginOptions) GetVisibilityLevel() uint32 {
	if x != nil {
		return x.VisibilityLevel
	}
	return 0
}

func (x *PluginOptions) GetEntrypointMessage() string {
	if x != nil {
		return x.EntrypointMessage
	}
	return ""
}

func (x *PluginOptions) GetOutputFileSuffix() string {
	if x != nil {
		return x.OutputFileSuffix
	}
	return ""
}

func (x *PluginOptions) GetPrettyJsonOutput() bool {
	if x != nil {
		return x.PrettyJsonOutput
	}
	return false
}

type FileOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//*
	//WIP: visibility_level is used to determine which message should be generated.
	//Currently not work.
	VisibilityLevel uint32 `protobuf:"varint,1,opt,name=visibility_level,json=visibilityLevel,proto3" json:"visibility_level,omitempty"`
	//*
	//entrypoint_message is used which message should be entrypoint object of schema.
	//default: inherit from PluginOptions.entrypoint_message
	EntrypointMessage string `protobuf:"bytes,2,opt,name=entrypoint_message,json=entrypointMessage,proto3" json:"entrypoint_message,omitempty"`
	//*
	//output_file_suffix is used to determine output file name suffix.
	//Values should end with '.json' or '.yaml' or '.yml'.
	//default: inherit from PluginOptions.output_file_suffix
	OutputFileSuffix string `protobuf:"bytes,3,opt,name=output_file_suffix,json=outputFileSuffix,proto3" json:"output_file_suffix,omitempty"`
	//*
	//pretty_json_output is used to determine output json should be pretty printed.
	//This option is only used when output_file_suffix is '.json'.
	//default: inherit from PluginOptions.pretty_json_output
	PrettyJsonOutput *bool `protobuf:"varint,4,opt,name=pretty_json_output,json=prettyJsonOutput,proto3,oneof" json:"pretty_json_output,omitempty"`
}

func (x *FileOptions) Reset() {
	*x = FileOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonschema_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileOptions) ProtoMessage() {}

func (x *FileOptions) ProtoReflect() protoreflect.Message {
	mi := &file_jsonschema_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileOptions.ProtoReflect.Descriptor instead.
func (*FileOptions) Descriptor() ([]byte, []int) {
	return file_jsonschema_proto_rawDescGZIP(), []int{1}
}

func (x *FileOptions) GetVisibilityLevel() uint32 {
	if x != nil {
		return x.VisibilityLevel
	}
	return 0
}

func (x *FileOptions) GetEntrypointMessage() string {
	if x != nil {
		return x.EntrypointMessage
	}
	return ""
}

func (x *FileOptions) GetOutputFileSuffix() string {
	if x != nil {
		return x.OutputFileSuffix
	}
	return ""
}

func (x *FileOptions) GetPrettyJsonOutput() bool {
	if x != nil && x.PrettyJsonOutput != nil {
		return *x.PrettyJsonOutput
	}
	return false
}

type MessageOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//*
	//WIP: visibility_level is used to determine which message should be generated.
	//Currently not work.
	VisibilityLevel uint32          `protobuf:"varint,1,opt,name=visibility_level,json=visibilityLevel,proto3" json:"visibility_level,omitempty"`
	Title           string          `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description     string          `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Object          *ObjectKeywords `protobuf:"bytes,10,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *MessageOptions) Reset() {
	*x = MessageOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonschema_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageOptions) ProtoMessage() {}

func (x *MessageOptions) ProtoReflect() protoreflect.Message {
	mi := &file_jsonschema_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageOptions.ProtoReflect.Descriptor instead.
func (*MessageOptions) Descriptor() ([]byte, []int) {
	return file_jsonschema_proto_rawDescGZIP(), []int{2}
}

func (x *MessageOptions) GetVisibilityLevel() uint32 {
	if x != nil {
		return x.VisibilityLevel
	}
	return 0
}

func (x *MessageOptions) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MessageOptions) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MessageOptions) GetObject() *ObjectKeywords {
	if x != nil {
		return x.Object
	}
	return nil
}

type ObjectKeywords struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdditionalProperties *bool `protobuf:"varint,1,opt,name=additional_properties,json=additionalProperties,proto3,oneof" json:"additional_properties,omitempty"`
	// repeated JsonSchema additional_properties = 10;
	MinProperties *uint32 `protobuf:"varint,2,opt,name=min_properties,json=minProperties,proto3,oneof" json:"min_properties,omitempty"`
	MaxProperties *uint32 `protobuf:"varint,3,opt,name=max_properties,json=maxProperties,proto3,oneof" json:"max_properties,omitempty"`
}

func (x *ObjectKeywords) Reset() {
	*x = ObjectKeywords{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonschema_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectKeywords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectKeywords) ProtoMessage() {}

func (x *ObjectKeywords) ProtoReflect() protoreflect.Message {
	mi := &file_jsonschema_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectKeywords.ProtoReflect.Descriptor instead.
func (*ObjectKeywords) Descriptor() ([]byte, []int) {
	return file_jsonschema_proto_rawDescGZIP(), []int{3}
}

func (x *ObjectKeywords) GetAdditionalProperties() bool {
	if x != nil && x.AdditionalProperties != nil {
		return *x.AdditionalProperties
	}
	return false
}

func (x *ObjectKeywords) GetMinProperties() uint32 {
	if x != nil && x.MinProperties != nil {
		return *x.MinProperties
	}
	return 0
}

func (x *ObjectKeywords) GetMaxProperties() uint32 {
	if x != nil && x.MaxProperties != nil {
		return *x.MaxProperties
	}
	return 0
}

type FieldOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//*
	//WIP: visibility_level is used to determine which message should be generated.
	//Currently not work.
	VisibilityLevel uint32           `protobuf:"varint,1,opt,name=visibility_level,json=visibilityLevel,proto3" json:"visibility_level,omitempty"`
	Title           string           `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description     string           `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Nullable        bool             `protobuf:"varint,5,opt,name=nullable,proto3" json:"nullable,omitempty"`
	Default         *anypb.Any       `protobuf:"bytes,10,opt,name=default,proto3" json:"default,omitempty"`
	Array           *ArrayKeywords   `protobuf:"bytes,11,opt,name=array,proto3" json:"array,omitempty"`
	Numeric         *NumericKeywords `protobuf:"bytes,12,opt,name=numeric,proto3" json:"numeric,omitempty"`
	String_         *StringKeywords  `protobuf:"bytes,13,opt,name=string,proto3" json:"string,omitempty"`
}

func (x *FieldOptions) Reset() {
	*x = FieldOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonschema_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldOptions) ProtoMessage() {}

func (x *FieldOptions) ProtoReflect() protoreflect.Message {
	mi := &file_jsonschema_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldOptions.ProtoReflect.Descriptor instead.
func (*FieldOptions) Descriptor() ([]byte, []int) {
	return file_jsonschema_proto_rawDescGZIP(), []int{4}
}

func (x *FieldOptions) GetVisibilityLevel() uint32 {
	if x != nil {
		return x.VisibilityLevel
	}
	return 0
}

func (x *FieldOptions) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *FieldOptions) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FieldOptions) GetNullable() bool {
	if x != nil {
		return x.Nullable
	}
	return false
}

func (x *FieldOptions) GetDefault() *anypb.Any {
	if x != nil {
		return x.Default
	}
	return nil
}

func (x *FieldOptions) GetArray() *ArrayKeywords {
	if x != nil {
		return x.Array
	}
	return nil
}

func (x *FieldOptions) GetNumeric() *NumericKeywords {
	if x != nil {
		return x.Numeric
	}
	return nil
}

func (x *FieldOptions) GetString_() *StringKeywords {
	if x != nil {
		return x.String_
	}
	return nil
}

type ArrayKeywords struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinItems    *uint32 `protobuf:"varint,1,opt,name=min_items,json=minItems,proto3,oneof" json:"min_items,omitempty"`
	MaxItems    *uint32 `protobuf:"varint,2,opt,name=max_items,json=maxItems,proto3,oneof" json:"max_items,omitempty"`
	UniqueItems *bool   `protobuf:"varint,3,opt,name=unique_items,json=uniqueItems,proto3,oneof" json:"unique_items,omitempty"`
}

func (x *ArrayKeywords) Reset() {
	*x = ArrayKeywords{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonschema_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrayKeywords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayKeywords) ProtoMessage() {}

func (x *ArrayKeywords) ProtoReflect() protoreflect.Message {
	mi := &file_jsonschema_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayKeywords.ProtoReflect.Descriptor instead.
func (*ArrayKeywords) Descriptor() ([]byte, []int) {
	return file_jsonschema_proto_rawDescGZIP(), []int{5}
}

func (x *ArrayKeywords) GetMinItems() uint32 {
	if x != nil && x.MinItems != nil {
		return *x.MinItems
	}
	return 0
}

func (x *ArrayKeywords) GetMaxItems() uint32 {
	if x != nil && x.MaxItems != nil {
		return *x.MaxItems
	}
	return 0
}

func (x *ArrayKeywords) GetUniqueItems() bool {
	if x != nil && x.UniqueItems != nil {
		return *x.UniqueItems
	}
	return false
}

type NumericKeywords struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Min:
	//	*NumericKeywords_InclusiveMinimum
	//	*NumericKeywords_ExclusiveMinimum
	Min isNumericKeywords_Min `protobuf_oneof:"min"`
	// Types that are assignable to Max:
	//	*NumericKeywords_InclusiveMaximum
	//	*NumericKeywords_ExclusiveMaximum
	Max        isNumericKeywords_Max `protobuf_oneof:"max"`
	MultipleOf *int32                `protobuf:"varint,5,opt,name=multiple_of,json=multipleOf,proto3,oneof" json:"multiple_of,omitempty"`
}

func (x *NumericKeywords) Reset() {
	*x = NumericKeywords{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonschema_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumericKeywords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumericKeywords) ProtoMessage() {}

func (x *NumericKeywords) ProtoReflect() protoreflect.Message {
	mi := &file_jsonschema_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumericKeywords.ProtoReflect.Descriptor instead.
func (*NumericKeywords) Descriptor() ([]byte, []int) {
	return file_jsonschema_proto_rawDescGZIP(), []int{6}
}

func (m *NumericKeywords) GetMin() isNumericKeywords_Min {
	if m != nil {
		return m.Min
	}
	return nil
}

func (x *NumericKeywords) GetInclusiveMinimum() float64 {
	if x, ok := x.GetMin().(*NumericKeywords_InclusiveMinimum); ok {
		return x.InclusiveMinimum
	}
	return 0
}

func (x *NumericKeywords) GetExclusiveMinimum() float64 {
	if x, ok := x.GetMin().(*NumericKeywords_ExclusiveMinimum); ok {
		return x.ExclusiveMinimum
	}
	return 0
}

func (m *NumericKeywords) GetMax() isNumericKeywords_Max {
	if m != nil {
		return m.Max
	}
	return nil
}

func (x *NumericKeywords) GetInclusiveMaximum() float64 {
	if x, ok := x.GetMax().(*NumericKeywords_InclusiveMaximum); ok {
		return x.InclusiveMaximum
	}
	return 0
}

func (x *NumericKeywords) GetExclusiveMaximum() float64 {
	if x, ok := x.GetMax().(*NumericKeywords_ExclusiveMaximum); ok {
		return x.ExclusiveMaximum
	}
	return 0
}

func (x *NumericKeywords) GetMultipleOf() int32 {
	if x != nil && x.MultipleOf != nil {
		return *x.MultipleOf
	}
	return 0
}

type isNumericKeywords_Min interface {
	isNumericKeywords_Min()
}

type NumericKeywords_InclusiveMinimum struct {
	InclusiveMinimum float64 `protobuf:"fixed64,1,opt,name=inclusive_minimum,json=inclusiveMinimum,proto3,oneof"`
}

type NumericKeywords_ExclusiveMinimum struct {
	ExclusiveMinimum float64 `protobuf:"fixed64,3,opt,name=exclusive_minimum,json=exclusiveMinimum,proto3,oneof"`
}

func (*NumericKeywords_InclusiveMinimum) isNumericKeywords_Min() {}

func (*NumericKeywords_ExclusiveMinimum) isNumericKeywords_Min() {}

type isNumericKeywords_Max interface {
	isNumericKeywords_Max()
}

type NumericKeywords_InclusiveMaximum struct {
	InclusiveMaximum float64 `protobuf:"fixed64,2,opt,name=inclusive_maximum,json=inclusiveMaximum,proto3,oneof"`
}

type NumericKeywords_ExclusiveMaximum struct {
	ExclusiveMaximum float64 `protobuf:"fixed64,4,opt,name=exclusive_maximum,json=exclusiveMaximum,proto3,oneof"`
}

func (*NumericKeywords_InclusiveMaximum) isNumericKeywords_Max() {}

func (*NumericKeywords_ExclusiveMaximum) isNumericKeywords_Max() {}

type StringKeywords struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinLength *uint32 `protobuf:"varint,1,opt,name=min_length,json=minLength,proto3,oneof" json:"min_length,omitempty"`
	MaxLength *uint32 `protobuf:"varint,2,opt,name=max_length,json=maxLength,proto3,oneof" json:"max_length,omitempty"`
	Pattern   string  `protobuf:"bytes,3,opt,name=pattern,proto3" json:"pattern,omitempty"`
	Format    string  `protobuf:"bytes,4,opt,name=format,proto3" json:"format,omitempty"`
}

func (x *StringKeywords) Reset() {
	*x = StringKeywords{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonschema_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringKeywords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringKeywords) ProtoMessage() {}

func (x *StringKeywords) ProtoReflect() protoreflect.Message {
	mi := &file_jsonschema_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringKeywords.ProtoReflect.Descriptor instead.
func (*StringKeywords) Descriptor() ([]byte, []int) {
	return file_jsonschema_proto_rawDescGZIP(), []int{7}
}

func (x *StringKeywords) GetMinLength() uint32 {
	if x != nil && x.MinLength != nil {
		return *x.MinLength
	}
	return 0
}

func (x *StringKeywords) GetMaxLength() uint32 {
	if x != nil && x.MaxLength != nil {
		return *x.MaxLength
	}
	return 0
}

func (x *StringKeywords) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

func (x *StringKeywords) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

type EnumOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MappingType EnumOptions_MappingType `protobuf:"varint,1,opt,name=mapping_type,json=mappingType,proto3,enum=pubg.jsonschema.EnumOptions_MappingType" json:"mapping_type,omitempty"`
	Title       string                  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string                  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *EnumOptions) Reset() {
	*x = EnumOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonschema_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumOptions) ProtoMessage() {}

func (x *EnumOptions) ProtoReflect() protoreflect.Message {
	mi := &file_jsonschema_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumOptions.ProtoReflect.Descriptor instead.
func (*EnumOptions) Descriptor() ([]byte, []int) {
	return file_jsonschema_proto_rawDescGZIP(), []int{8}
}

func (x *EnumOptions) GetMappingType() EnumOptions_MappingType {
	if x != nil {
		return x.MappingType
	}
	return EnumOptions_MapToString
}

func (x *EnumOptions) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EnumOptions) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type EnumValueOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomValue *anypb.Any `protobuf:"bytes,10,opt,name=custom_value,json=customValue,proto3" json:"custom_value,omitempty"`
}

func (x *EnumValueOptions) Reset() {
	*x = EnumValueOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonschema_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumValueOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumValueOptions) ProtoMessage() {}

func (x *EnumValueOptions) ProtoReflect() protoreflect.Message {
	mi := &file_jsonschema_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumValueOptions.ProtoReflect.Descriptor instead.
func (*EnumValueOptions) Descriptor() ([]byte, []int) {
	return file_jsonschema_proto_rawDescGZIP(), []int{9}
}

func (x *EnumValueOptions) GetCustomValue() *anypb.Any {
	if x != nil {
		return x.CustomValue
	}
	return nil
}

var file_jsonschema_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: (*FileOptions)(nil),
		Field:         11341,
		Name:          "pubg.jsonschema.file",
		Tag:           "bytes,11341,opt,name=file",
		Filename:      "jsonschema.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*MessageOptions)(nil),
		Field:         11342,
		Name:          "pubg.jsonschema.message",
		Tag:           "bytes,11342,opt,name=message",
		Filename:      "jsonschema.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*FieldOptions)(nil),
		Field:         11343,
		Name:          "pubg.jsonschema.field",
		Tag:           "bytes,11343,opt,name=field",
		Filename:      "jsonschema.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumOptions)(nil),
		ExtensionType: (*EnumOptions)(nil),
		Field:         11344,
		Name:          "pubg.jsonschema.enum",
		Tag:           "bytes,11344,opt,name=enum",
		Filename:      "jsonschema.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*EnumValueOptions)(nil),
		Field:         11345,
		Name:          "pubg.jsonschema.enum_value",
		Tag:           "bytes,11345,opt,name=enum_value",
		Filename:      "jsonschema.proto",
	},
}

// Extension fields to descriptorpb.FileOptions.
var (
	// optional pubg.jsonschema.FileOptions file = 11341;
	E_File = &file_jsonschema_proto_extTypes[0]
)

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional pubg.jsonschema.MessageOptions message = 11342;
	E_Message = &file_jsonschema_proto_extTypes[1]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional pubg.jsonschema.FieldOptions field = 11343;
	E_Field = &file_jsonschema_proto_extTypes[2]
)

// Extension fields to descriptorpb.EnumOptions.
var (
	// optional pubg.jsonschema.EnumOptions enum = 11344;
	E_Enum = &file_jsonschema_proto_extTypes[3]
)

// Extension fields to descriptorpb.EnumValueOptions.
var (
	// optional pubg.jsonschema.EnumValueOptions enum_value = 11345;
	E_EnumValue = &file_jsonschema_proto_extTypes[4]
)

var File_jsonschema_proto protoreflect.FileDescriptor

var file_jsonschema_proto_rawDesc = []byte{
	0x0a, 0x10, 0x6a, 0x73, 0x6f, 0x6e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0f, 0x70, 0x75, 0x62, 0x67, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xc5, 0x01, 0x0a, 0x0d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2d, 0x0a,
	0x12, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x12,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x75, 0x66, 0x66,
	0x69, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72,
	0x65, 0x74, 0x74, 0x79, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x70, 0x72, 0x65, 0x74, 0x74, 0x79, 0x4a, 0x73,
	0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0xdf, 0x01, 0x0a, 0x0b, 0x46, 0x69, 0x6c,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x2d, 0x0a, 0x12, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78,
	0x12, 0x31, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x74, 0x74, 0x79, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x5f,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x10,
	0x70, 0x72, 0x65, 0x74, 0x74, 0x79, 0x4a, 0x73, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x88, 0x01, 0x01, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x70, 0x72, 0x65, 0x74, 0x74, 0x79, 0x5f, 0x6a,
	0x73, 0x6f, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0xac, 0x01, 0x0a, 0x0e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x0a,
	0x10, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x37, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x70, 0x75, 0x62, 0x67, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xe2, 0x01, 0x0a, 0x0e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x38, 0x0a, 0x15,
	0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x14, 0x61,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01,
	0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x0d, 0x6d, 0x61,
	0x78, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x88, 0x01, 0x01, 0x42, 0x18,
	0x0a, 0x16, 0x5f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6d, 0x69, 0x6e,
	0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0xe8,
	0x02, 0x0a, 0x0c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x29, 0x0a, 0x10, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x76, 0x69, 0x73, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2e,
	0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x34,
	0x0a, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x70, 0x75, 0x62, 0x67, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e,
	0x41, 0x72, 0x72, 0x61, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x05, 0x61,
	0x72, 0x72, 0x61, 0x79, 0x12, 0x3a, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x75, 0x62, 0x67, 0x2e, 0x6a, 0x73, 0x6f,
	0x6e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63,
	0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x70, 0x75, 0x62, 0x67, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0xa8, 0x01, 0x0a, 0x0d, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x6d,
	0x69, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00,
	0x52, 0x08, 0x6d, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a,
	0x09, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x48, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x26, 0x0a, 0x0c, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x0b, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x69, 0x6e, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0x91, 0x02, 0x0a, 0x0f, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x2d, 0x0a, 0x11, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65,
	0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x12, 0x2d, 0x0a, 0x11, 0x65, 0x78, 0x63, 0x6c, 0x75,
	0x73, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x48, 0x00, 0x52, 0x10, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x4d,
	0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x12, 0x2d, 0x0a, 0x11, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73,
	0x69, 0x76, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x01, 0x52, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x4d, 0x61,
	0x78, 0x69, 0x6d, 0x75, 0x6d, 0x12, 0x2d, 0x0a, 0x11, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69,
	0x76, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x48, 0x01, 0x52, 0x10, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x78,
	0x69, 0x6d, 0x75, 0x6d, 0x12, 0x24, 0x0a, 0x0b, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65,
	0x5f, 0x6f, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x0a, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x65, 0x4f, 0x66, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x6d, 0x69,
	0x6e, 0x42, 0x05, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x65, 0x5f, 0x6f, 0x66, 0x22, 0xa8, 0x01, 0x0a, 0x0e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0a, 0x6d,
	0x69, 0x6e, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48,
	0x00, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x6c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x22, 0xd4, 0x01, 0x0a, 0x0b, 0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x4b, 0x0a, 0x0c, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x70, 0x75, 0x62, 0x67,
	0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x45, 0x6e, 0x75, 0x6d,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x40, 0x0a, 0x0b, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x61, 0x70, 0x54, 0x6f,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x61, 0x70, 0x54,
	0x6f, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x61, 0x70,
	0x54, 0x6f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x10, 0x02, 0x22, 0x4b, 0x0a, 0x10, 0x45, 0x6e,
	0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x37,
	0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x4f, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xcd, 0x58,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x75, 0x62, 0x67, 0x2e, 0x6a, 0x73, 0x6f, 0x6e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x3a, 0x5b, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0xce, 0x58, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x75,
	0x62, 0x67, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x3a, 0x53, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xcf, 0x58,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x75, 0x62, 0x67, 0x2e, 0x6a, 0x73, 0x6f, 0x6e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x3a, 0x4f, 0x0a, 0x04, 0x65, 0x6e,
	0x75, 0x6d, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0xd0, 0x58, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x75, 0x62, 0x67, 0x2e, 0x6a,
	0x73, 0x6f, 0x6e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x3a, 0x64, 0x0a, 0x0a, 0x65,
	0x6e, 0x75, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd1, 0x58, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x75, 0x62, 0x67, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x09, 0x65, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x70, 0x75, 0x62, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d,
	0x6a, 0x73, 0x6f, 0x6e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_jsonschema_proto_rawDescOnce sync.Once
	file_jsonschema_proto_rawDescData = file_jsonschema_proto_rawDesc
)

func file_jsonschema_proto_rawDescGZIP() []byte {
	file_jsonschema_proto_rawDescOnce.Do(func() {
		file_jsonschema_proto_rawDescData = protoimpl.X.CompressGZIP(file_jsonschema_proto_rawDescData)
	})
	return file_jsonschema_proto_rawDescData
}

var file_jsonschema_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_jsonschema_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_jsonschema_proto_goTypes = []interface{}{
	(EnumOptions_MappingType)(0),          // 0: pubg.jsonschema.EnumOptions.MappingType
	(*PluginOptions)(nil),                 // 1: pubg.jsonschema.PluginOptions
	(*FileOptions)(nil),                   // 2: pubg.jsonschema.FileOptions
	(*MessageOptions)(nil),                // 3: pubg.jsonschema.MessageOptions
	(*ObjectKeywords)(nil),                // 4: pubg.jsonschema.ObjectKeywords
	(*FieldOptions)(nil),                  // 5: pubg.jsonschema.FieldOptions
	(*ArrayKeywords)(nil),                 // 6: pubg.jsonschema.ArrayKeywords
	(*NumericKeywords)(nil),               // 7: pubg.jsonschema.NumericKeywords
	(*StringKeywords)(nil),                // 8: pubg.jsonschema.StringKeywords
	(*EnumOptions)(nil),                   // 9: pubg.jsonschema.EnumOptions
	(*EnumValueOptions)(nil),              // 10: pubg.jsonschema.EnumValueOptions
	(*anypb.Any)(nil),                     // 11: google.protobuf.Any
	(*descriptorpb.FileOptions)(nil),      // 12: google.protobuf.FileOptions
	(*descriptorpb.MessageOptions)(nil),   // 13: google.protobuf.MessageOptions
	(*descriptorpb.FieldOptions)(nil),     // 14: google.protobuf.FieldOptions
	(*descriptorpb.EnumOptions)(nil),      // 15: google.protobuf.EnumOptions
	(*descriptorpb.EnumValueOptions)(nil), // 16: google.protobuf.EnumValueOptions
}
var file_jsonschema_proto_depIdxs = []int32{
	4,  // 0: pubg.jsonschema.MessageOptions.object:type_name -> pubg.jsonschema.ObjectKeywords
	11, // 1: pubg.jsonschema.FieldOptions.default:type_name -> google.protobuf.Any
	6,  // 2: pubg.jsonschema.FieldOptions.array:type_name -> pubg.jsonschema.ArrayKeywords
	7,  // 3: pubg.jsonschema.FieldOptions.numeric:type_name -> pubg.jsonschema.NumericKeywords
	8,  // 4: pubg.jsonschema.FieldOptions.string:type_name -> pubg.jsonschema.StringKeywords
	0,  // 5: pubg.jsonschema.EnumOptions.mapping_type:type_name -> pubg.jsonschema.EnumOptions.MappingType
	11, // 6: pubg.jsonschema.EnumValueOptions.custom_value:type_name -> google.protobuf.Any
	12, // 7: pubg.jsonschema.file:extendee -> google.protobuf.FileOptions
	13, // 8: pubg.jsonschema.message:extendee -> google.protobuf.MessageOptions
	14, // 9: pubg.jsonschema.field:extendee -> google.protobuf.FieldOptions
	15, // 10: pubg.jsonschema.enum:extendee -> google.protobuf.EnumOptions
	16, // 11: pubg.jsonschema.enum_value:extendee -> google.protobuf.EnumValueOptions
	2,  // 12: pubg.jsonschema.file:type_name -> pubg.jsonschema.FileOptions
	3,  // 13: pubg.jsonschema.message:type_name -> pubg.jsonschema.MessageOptions
	5,  // 14: pubg.jsonschema.field:type_name -> pubg.jsonschema.FieldOptions
	9,  // 15: pubg.jsonschema.enum:type_name -> pubg.jsonschema.EnumOptions
	10, // 16: pubg.jsonschema.enum_value:type_name -> pubg.jsonschema.EnumValueOptions
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	12, // [12:17] is the sub-list for extension type_name
	7,  // [7:12] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_jsonschema_proto_init() }
func file_jsonschema_proto_init() {
	if File_jsonschema_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_jsonschema_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jsonschema_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jsonschema_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jsonschema_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectKeywords); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jsonschema_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jsonschema_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrayKeywords); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jsonschema_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumericKeywords); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jsonschema_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringKeywords); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jsonschema_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jsonschema_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumValueOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_jsonschema_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_jsonschema_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_jsonschema_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_jsonschema_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*NumericKeywords_InclusiveMinimum)(nil),
		(*NumericKeywords_ExclusiveMinimum)(nil),
		(*NumericKeywords_InclusiveMaximum)(nil),
		(*NumericKeywords_ExclusiveMaximum)(nil),
	}
	file_jsonschema_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_jsonschema_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 5,
			NumServices:   0,
		},
		GoTypes:           file_jsonschema_proto_goTypes,
		DependencyIndexes: file_jsonschema_proto_depIdxs,
		EnumInfos:         file_jsonschema_proto_enumTypes,
		MessageInfos:      file_jsonschema_proto_msgTypes,
		ExtensionInfos:    file_jsonschema_proto_extTypes,
	}.Build()
	File_jsonschema_proto = out.File
	file_jsonschema_proto_rawDesc = nil
	file_jsonschema_proto_goTypes = nil
	file_jsonschema_proto_depIdxs = nil
}
